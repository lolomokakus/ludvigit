#!/usr/bin/env bash
ENGINE=bing
LANGUAGES=(af ar bg bn bs ca cs cy da de el en es et fa fi fj fr he hi hr ht hu id it ja ko lt lv mg ms mt nl no otq pl pt ro ru sk sl sm sr-Latn sv sw th tlh to tr ty uk ur vi yua yue zh-CN)
DEFAULTLANG=en
PASSES=20
DELAY=1

function stop_early() {
  printf "\n" >&2
  printf -- "$STRING\n"
  exit 1
}

trap stop_early SIGINT SIGTERM

if [[ -z "$1" ]] ; then
  STRING="Please enter a string to make nonsense out of."
  printf -- "$STRING\n" >&2
else
  STRING="$1"
fi

if [[ -z "$2" ]] ; then
	originalLanguage=$DEFAULTLANG
else
	originalLanguage="$2"
fi

printf "[" >&2
indicator=0
while [[ $indicator -lt $PASSES ]] ; do
  printf "-" >&2
  ((indicator++))
done
printf "]" >&2

pass=0
while [[ $pass -lt $PASSES ]] ; do
  selectedLanguage=$((RANDOM % ${#LANGUAGES[@]} - 1))
  if [[ $pass = 0 ]] ; then
    STRING="$(trans -engine $ENGINE -brief -no-autocorrect "$originalLanguage":${LANGUAGES[$selectedLanguage]} -- "$STRING")"
  elif [[ $pass = $((PASSES - 1)) ]] ; then
    STRING="$(trans -engine $ENGINE -brief -no-autocorrect ${LANGUAGES[$previousLanguage]}:"$originalLanguage" -- "$STRING")"
  else
    STRING="$(trans -engine $ENGINE -brief -no-autocorrect ${LANGUAGES[$previousLanguage]}:${LANGUAGES[$selectedLanguage]} -- "$STRING")"
  fi
  previousLanguage=$selectedLanguage
  printf "\r[" >&2
  indicator=0
  while [[ $indicator -lt $PASSES ]] ; do
    if [[ $pass -lt $indicator ]] ; then
      printf "-" >&2
    else
      printf "#" >&2
    fi
    ((indicator++))
  done
  printf "]" >&2
  if [[ $pass != $((PASSES - 1)) ]] ; then
    sleep $DELAY
  fi
  ((pass++))
done

printf "\n" >&2
printf -- "$STRING\n"

exit 0
