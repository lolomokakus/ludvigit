#!/usr/bin/env bash

# if we're not already running as root, run the script as root and then exit
if [ "$( whoami )" != "root" ] ; then
	sudo $0 $@
	exit
fi

# detect flags -o, -c and -s (for open, close, and status respectively)
while getopts ":ocs" opt ; do
	case $opt in
		o)
			if mount | grep /dev/mapper/vault >/dev/null 2>&1 ; then # exit with error if vault is already open
				echo "error: vault already opened"
				exit 2
			fi
			cryptsetup luksOpen /dev/disk/by-partlabel/vault vault && mount /dev/mapper/vault /vault
			if [ "$?" = "0" ] ; then # if something goes wrong, exit with error
				echo "vault opened."
				exit 0
			else
				echo "errors encountered; vault not opened."
				exit 4
			fi
			;;
		c)
			if ! mount | grep /dev/mapper/vault >/dev/null 2>&1 ; then # exit with error if vault is already closed
				echo "error: vault already closed"
				exit 3
			fi
			umount /dev/mapper/vault && cryptsetup luksClose vault
			if [ "$?" = "0" ] ; then
				echo "vault closed."
				exit 0
			else
				echo "errors encountered; vault not closed."
				exit 4
			fi
			;;
		s)
			if mount | grep /dev/mapper/vault >/dev/null 2>&1 ; then # check whether vault is open or closed, then echo the result
				echo "vault is open."
			else
				echo "vault is closed."
			fi
			exit 0
			;;
		\?)
			echo "error: invalid option: -$OPTARG" # handle invalid parameters
			exit 1
			;;
	esac
done
